<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- Query문을 정의 
  			ns(name space) : XML 내에서 중복된 id를 사용할 수 있도록 구분하는 것. (패키지와 비슷한 용도)  	
  -->
<mapper namespace="kr.co.sist.exam1">
<!-- 컬럼하나에 레코드 하나 조회 -->
<!-- MyBatis 에서는 Java의 데이터형(기본형, 참조형)을 그대로 사용할 수 있다. 
		String data=sqlSession.selectOne("singleColumn");
 -->
<select id="singleColumn" resultType="String">
	SELECT DNAME
	FROM DEPT
	WHERE DEPTNO=10
</select>
<!-- 컬럼하나에 레코드 여러개 조회 
		resultType="자바 데이터형(기본형, 참조형)"
		호출 : List<데이터형> list=SqlSession.selectList("id");
		기본형을 사용해도 되고, wrapper Class를 사용할 수 있다.
--> 
	<!-- <select id="multiRow" resultType="int"> -->
	<select id="multiRow" resultType="integer">
	select deptno
	from dept
	</select>
		
<!--컬럼여러개 레코드 하나 조회  
	<typeAlias> : Domain 이나 VO를 미리 등록(iBATIS - mapper정의, MyBatis-설정 파일)
	해두고 짧은 이름으로 사용할 때. (여러번 사용되면 유리)
	
	조회되는 컬럼은 대소문자를 구분하지 않지만 setter method는 대소문자를 구분
	iBATIS에서는 컬럼명 또는 컬럼명 as setter명
	
	resultType="패키지명.Domain명 사용되거나 typeAlias 의 id가 사용된다.
--> 
 <select id="multiColumn" resultType="kr.co.sist.exam.domain.DeptInfo">
<!-- <select id="multiColumn" resultType="di"> -->
	select dname, loc
	from	dept
	where deptno=10
</select>

<!-- 컬럼여러개 레코드 하나 조회 -->
<!-- 컬럼여러개 레코드 여러개 조회 -->
<!-- <의 조회 -->
<!-- >의 조회 -->
<!-- 동일 쿼리의 처리 -->
<!-- like의 조회 -->
<!-- subquery의 조회 -->
<!-- union의 조회 -->
<!-- join의 조회 -->
<!-- join + subquery의 조회 -->
<!-- 컬럼명 또는 테이블명이 동적일 때의 조회 -->
<!-- dynamic query : where, if, choose, foreach-->

</mapper>




